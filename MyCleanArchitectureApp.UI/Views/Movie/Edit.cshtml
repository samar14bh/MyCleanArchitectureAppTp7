@model MovieViewModel

@{
    ViewData["Title"] = "Edit Movie";
}

@if (!ViewContext.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var modelError in ViewContext.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@modelError.ErrorMessage</li>
            }
        </ul>
    </div>
}

<h1>Edit Movie</h1>
<h4>Movie</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-controller="Movie" asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Hidden Field for MovieCode -->

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="GenreId" class="control-label"></label>
                <select asp-for="GenreId" class="form-control" asp-items="ViewBag.Genres"></select>
                <span asp-validation-for="GenreId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AverageRating" class="control-label"></label>
                <input asp-for="AverageRating" class="form-control" type="number" step="0.1" />
                <span asp-validation-for="AverageRating" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
